<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>

	<title>Counterpoint</title>

	<link href='http://fonts.googleapis.com/css?family=Bubbler+One' rel='stylesheet' type='text/css'/>

	<link rel='stylesheet' href='css/styles.css' type='text/css'></link>

	<script src="libs/jquery-latest.min.js" type="text/javascript"></script>
	<script src="libs/timbre.js" type="text/javascript"></script>
	<script src="libs/subcollider.js" type="text/javascript"></script>
	<script src="js/keyboard.js" type="text/javascript"></script>
	<script src="js/counterpoint.js" type="text/javascript"></script>

	<script type="text/javascript">

		$('#veil p').css('left', $('#veil').width() / 2);

		var player;

		$(document).ready(function() {

			startTheMusic();

			var noteMap = new Object();
			noteMap[0] = "c";
			noteMap[1] = "csharp";
			noteMap[2] = "d";
			noteMap[3] = "dsharp";
			noteMap[4] = "e";
			noteMap[5] = "f";
			noteMap[6] = "fsharp";
			noteMap[7] = "g";
			noteMap[8] = "gsharp";
			noteMap[9] = "a";
			noteMap[10] = "asharp";
			noteMap[11] = "b";

			var bar = $('#config-bar');

			var LOOP = false;

			var not = true;

			function animateKey(key, on) {
				$(key).animate({
					opacity: 0.75,
					color: "white",
					backgroundColor: "red"
				}, 1000)
			}

			function animateOpacity(v, on) {
				if (on) {
					$(v).addClass('hidden');
					$(v).animate({
						opacity: 1
					}, 600);
				} else {
					$(v).removeClass('hidden');
					$(v).animate({
						opacity: 0
					}, 200);
				}
			}

			function init() {

				$('#submit').css('display', 'none');

				not = false;
				animateOpacity($('#gen-piano'), true);
				animateOpacity($('#piano'), true);

				// adjust pianos
				$('#gen-piano td').width($(document).width() / 12);
				$('#gen-piano td').height($(document).height() / 10 );
				$('#piano td').width($(document).width() / 12);
				$('#piano td').height($(document).height() / 10 );

				var keyboard_help = $('#keyboard_help');
				animateOpacity(keyboard_help, true);
				keyboard_help.css('left', ($(document).width() / 2) - (keyboard_help.width() / 2));
				var content = $('#content');
				animateOpacity(content, true);
				content.css('left', ($(document).width() / 2) - (content.width() / 2));

				$(window).resize(function() {

					// adjust pianos
					$('#gen-piano td').width($(document).width() / 12);
					$('#gen-piano td').height($(document).height() / 10 );
					$('#piano td').width($(document).width() / 12);
					$('#piano td').height($(document).height() / 10 );

					keyboard_help.css('left', ($(document).width() / 2) - (keyboard_help.width() / 2));
					content.css('left', ($(document).width() / 2) - (content.width() / 2));

				});

				var s = 'theme: ';
				for (n in cantusNotes) {
					if (n < SONG_LENGTH) {
						s += noteMap[cantusNotes[n] % 12].replace('sharp','#') + " ";
					}
				}
				$(content.children()[0]).html(s);
				s = 'species one counterpoint: ';
				for (n in speciesOneNotes) {
					if (n < SONG_LENGTH) {
						s += noteMap[speciesOneNotes[n] % 12].replace('sharp','#') + " ";
					}
				}
				$(content.children()[1]).html(s);
				s = 'species two counterpoint: ';
				for (n in speciesTwoNotes) {
					if (n < SONG_LENGTH) {
						s += noteMap[speciesTwoNotes[n][0] % 12].replace('sharp','#') + " ";
						s += noteMap[speciesTwoNotes[n][1] % 12].replace('sharp','#') + " ";
					}
				}
				$(content.children()[2]).html(s);

				if (minor) {
					$($('#notes').children()[0]).html('here\'s some contrapuntally generated notes from a theme in C minor');
				}

				var submit = $('#submit');

				config_text.click(function() {

					if (!bar.hasClass('click')) {
						bar.addClass('click');
						$({deg: 0}).animate({deg: 90},
						{
							duration: 500,
							step: function(now) {
								config_text.css({
									transform: "rotate("+ now + "deg)"
								});
							}
						});
						animateOpacity(config_table, true);
						bar.animate(
							{ 'top': '-=25%' },
							350,
							'swing'
						);
					} else {
						$({deg: 90}).animate({deg: 0},
						{
							duration: 500,
							step: function(now) {
								config_text.css({
									transform: "rotate("+ now + "deg)"
								});
							}
						});
						animateOpacity(config_table, false);
						bar.animate(
							{ 'top': '+=25%' },
							350,
							'swing',
							function() {
								bar.removeClass('click');
							}
						);
					}

				});


			}
			// init 

			var pause = $('#pause');
			var config_text = $($(bar.children()[0]).children()[0]);
			var config_table = $($(bar.children()[0]).children()[1]);
			$('#veil p').click(function() {
				animateOpacity($('#veil p'), false);
				bar.addClass('click');
				$({deg: 0}).animate({deg: 90},
				{
					duration: 500,
					step: function(now) {
						config_text.css({
							transform: "rotate("+ now + "deg)"
						});
					}
				});
				animateOpacity(config_table, true);
				bar.animate(
					{ 'top': '-=25%' },
					350,
					'swing'
				);
			});
			

			$('#submit').click(function() {
				if (bar.hasClass('click')) {
					$({deg: 90}).animate({deg: 0},
					{
						duration: 500,
						step: function(now) {
							config_text.css({
								transform: "rotate("+ now + "deg)"
							});
						}
					});
					animateOpacity(config_table, false);
					bar.animate(
						{ 'top': '+=25%' },
						350,
						'swing',
						function() {
							bar.removeClass('click');
						}
					);

				} else {

				}
				if (not) {
					init()
					animateOpacity(pause, true);
					getMusic();
				}
			});

			pause.click(function() {
				if (!pause.hasClass('paused')) {
					pause.prop('value','play');
					player.pause();
					pause.addClass('paused');
				} else {
					pause.prop('value','stop');
					getMusic();
					pause.removeClass('paused');
				}
			});

			function getMusic() {

				timbre.rec(function(output) {

					var msec  = timbre.timevalue("bpm140 l4");
					var msec2 = timbre.timevalue("bpm140 l8");
					var synth = T("OscGen", {env:T("perc", {r:msec, ar:true})});
					var delay;

					T("interval", {interval:msec}, function(count) {
						if (count < cantusNotes.length) {
							if ($('#cantus').is(':checked')) {
								synth.noteOn(cantusNotes[count], 100);
								animateKey($('#gen-piano').find('#gen-key-'+noteMap[cantusNotes[count] % 12]), true);
							}
							if ($('#species-one').is(':checked')) {
								animateKey($('#piano').find('#key-'+noteMap[speciesOneNotes[count] % 12]), true);
								synth.noteOn(speciesOneNotes[count], 100);
							}
						} else {
							output.done();
						}
					}).start();

					T("interval", {interval:msec2}, function(count) {
						if (count < cantusNotes.length) {
							if ($('#species-two').is(':checked')) {
								synth.noteOn(speciesTwoNotes[count][0], 100);
								synth.noteOn(speciesTwoNotes[count][1], 100);
							}
						} else {
							output.done();
						}
					}).start();

					output.send(synth);

				}).then(function(result) {

					if ($('#loop').is(':checked')){
						LOOP = true;
					} else {
						LOOP = false;
					}
					var L = T("buffer", {buffer:result, loop:LOOP});
					var R = T("buffer", {buffer:result, loop:LOOP});

					var num = 400;
					var duration = L.duration;

					R.pitch = (duration * (num - 1)) / (duration * num);

					if ($('#delay').is(':checked')){
						delay = 7;
					} else {
						delay = 0;
					}
					player = T("delay", {time:"bpm140 l"+delay, fb:0.1, cross:true},
						T("pan", {pos:-0.5}, L), T("pan", {pos:+0.5}, R)
					);
					
					player.play();

				});

			}

		});

	</script>

</head>
<body>

	<div id="veil">
		<p>click here</p>
	</div>

	<div id="config-bar">
		<div id='config-content'>
			<p id='config-text'>config</p>
			<form id='config-table' class="hidden" action="#">
				<p>what tracks do you want to play?</p>
				<div>theme:
					<input type="checkbox" id="cantus" value="theme"/>
				</div>
				<div>species one counterpoint:
					<input type="checkbox" id="species-one" value="species one counterpoint"/>
				</div>
				<div>species two counterpoint:
					<input type="checkbox" id="species-two" value="species two counterpoint"/><br/>
				</div>
				<div>
					<input id="submit" type="submit" value="submit"/>
				<input id="pause" class="hidden" type="button" value="stop"/>
				</div>
				<div>loop:
					<input type="checkbox" id="loop" value="loop"/>
				</div>
				<div>delay:
					<input type="checkbox" id="delay" value="delay"/>
				</div>
			</form>
		</div>
	</div>

	<div id="gen-piano" class="hidden">
		<table>
			<tr>
				<td> &nbsp; </td>
				<td id="gen-key-csharp"> c# </td>
				<td> &nbsp; </td>
				<td id="gen-key-dsharp"> d# </td>
				<td> &nbsp; </td>
				<td> &nbsp; </td>
				<td id="gen-key-fsharp"> f# </td>
				<td> &nbsp; </td>
				<td id="gen-key-gsharp"> g# </td>
				<td> &nbsp; </td>
				<td id="gen-key-asharp"> a# </td>
				<td> &nbsp; </td>
			</tr>
			<tr>
				<td id="gen-key-c"> c </td>
				<td> &nbsp; </td>
				<td id="gen-key-d"> d </td>
				<td> &nbsp; </td>
				<td id="gen-key-e"> e </td>
				<td id="gen-key-f"> f </td>
				<td> &nbsp; </td>
				<td id="gen-key-g"> g </td>
				<td> &nbsp; </td>
				<td id="gen-key-a"> a </td>
				<td> &nbsp; </td>
				<td id="gen-key-b"> b </td>
			</tr>
		</table>
	</div>

	<div id="notes" class="hidden">
		<p>here's some contrapuntally generated notes from a theme in C</p>
	</div>
	<div id="content" class="hidden">
		<p>play along using the highlighted notes above!</p>
		<p id="help">how?</p>
		<p>halp?</p>
	</div>

	<div id="piano" class="hidden">
		<table>
			<tr>
				<td> &nbsp; </td>
				<td id="key-csharp"> c# </td>
				<td> &nbsp; </td>
				<td id="key-dsharp"> d# </td>
				<td> &nbsp; </td>
				<td> &nbsp; </td>
				<td id="key-fsharp"> f# </td>
				<td> &nbsp; </td>
				<td id="key-gsharp"> g# </td>
				<td> &nbsp; </td>
				<td id="key-asharp"> a# </td>
				<td> &nbsp; </td>
			</tr>
			<tr>
				<td id="key-c"> c </td>
				<td> &nbsp; </td>
				<td id="key-d"> d </td>
				<td> &nbsp; </td>
				<td id="key-e"> e </td>
				<td id="key-f"> f </td>
				<td> &nbsp; </td>
				<td id="key-g"> g </td>
				<td> &nbsp; </td>
				<td id="key-a"> a </td>
				<td> &nbsp; </td>
				<td id="key-b"> b </td>
			</tr>
		</table>
	</div>

</body>
</html>
